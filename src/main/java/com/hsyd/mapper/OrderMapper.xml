<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsyd.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.hsyd.model.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="is_pay" property="isPay" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="REAL" />
    <result column="close" property="close" jdbcType="INTEGER" />
    <result column="del_status" property="delStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_id, create_time, close_time, payment_time, user_id, user_phone, payment_type, 
    count, is_pay, total, close, del_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hsyd.model.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hsyd.model.OrderExample" >
    delete from m_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hsyd.model.Order" >
    insert into m_order (id, order_id, create_time, 
      close_time, payment_time, user_id, 
      user_phone, payment_type, count, 
      is_pay, total, close, del_status
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{closeTime,jdbcType=TIMESTAMP}, #{paymentTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{userPhone,jdbcType=VARCHAR}, #{paymentType,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, 
      #{isPay,jdbcType=INTEGER}, #{total,jdbcType=REAL}, #{close,jdbcType=INTEGER}, #{delStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hsyd.model.Order" >
    insert into m_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="close != null" >
        close,
      </if>
      <if test="delStatus != null" >
        del_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=REAL},
      </if>
      <if test="close != null" >
        #{close,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null" >
        #{delStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hsyd.model.OrderExample" resultType="java.lang.Integer" >
    select count(*) from m_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.closeTime != null" >
        close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userPhone != null" >
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null" >
        payment_type = #{record.paymentType,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.isPay != null" >
        is_pay = #{record.isPay,jdbcType=INTEGER},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.close != null" >
        close = #{record.close,jdbcType=INTEGER},
      </if>
      <if test="record.delStatus != null" >
        del_status = #{record.delStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_order
    set id = #{record.id,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      payment_type = #{record.paymentType,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      is_pay = #{record.isPay,jdbcType=INTEGER},
      total = #{record.total,jdbcType=REAL},
      close = #{record.close,jdbcType=INTEGER},
      del_status = #{record.delStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hsyd.model.Order" >
    update m_order
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=REAL},
      </if>
      <if test="close != null" >
        close = #{close,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null" >
        del_status = #{delStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hsyd.model.Order" >
    update m_order
    set order_id = #{orderId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      is_pay = #{isPay,jdbcType=INTEGER},
      total = #{total,jdbcType=REAL},
      close = #{close,jdbcType=INTEGER},
      del_status = #{delStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>